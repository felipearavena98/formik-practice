{"version":3,"sources":["components/Checkbox.js","components/TextInput.js","components/Select.js","components/Radio.js","App.js","reportWebVitals.js","index.js"],"names":["Checkbox","children","props","useField","type","field","meta","touched","error","TextInput","label","className","Select","Radio","validate","values","errors","name","length","lastname","radio","App","Container","Row","Col","sm","initialValues","email","opcion","onSubmit","console","log","htmlFor","id","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08d1f02a.chunk.js","sourcesContent":["import { useField } from 'formik';\r\n\r\nconst Checkbox = ({ children, ...props }) => {\r\n    const [field, meta] = useField({ ...props, type: 'checkbox' })\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" {...field} {...props} />\r\n                {children}\r\n            </label>\r\n            {meta.touched && meta.error ? <div>{meta.error}</div> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox;","import { useField } from \"formik\";\r\n\r\nconst TextInput = ({label, ...props}) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"label\" >{label}</label>\r\n            <input className=\"input\" {...field} {...props} />\r\n            {meta.touched && meta.error ? <div className=\"error\" >{meta.error}</div> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import { useField } from \"formik\";\r\n\r\nconst Select = ({label, ...props}) => {\r\n    const [field, meta] = useField(props)\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <select {...field} {...props} />\r\n            {meta.touched && meta.error ? <div>{meta.error}</div> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","import { useField } from \"formik\"\r\n\r\n\r\nconst Radio = ({label, ...props}) => {\r\n    \r\n    const [field] = useField({ ...props, type:'radio' })\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type='radio' {...field} {...props} />\r\n                {label}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Radio;","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport Checkbox from './components/Checkbox';\r\nimport TextInput from './components/TextInput';\r\nimport Select from './components/Select';\r\nimport Radio from './components/Radio';\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nconst validate = (values) => {\r\n\r\n  const errors = {}\r\n\r\n  if (!values.name) {\r\n    errors.name = 'Requerido'\r\n  } else if (values.name.length < 5) {\r\n    errors.name = 'El nombre es muy corto'\r\n  }\r\n\r\n  if (!values.lastname) {\r\n    errors.lastname = 'Requerido'\r\n  } else if (values.lastname.length < 5) {\r\n    errors.lastname = 'El apellido es muy corto'\r\n  }\r\n\r\n  if (!values.radio) {\r\n    errors.radio = 'Requerido'\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className='mx-auto text-center'>\r\n          <Col sm={12} className='mt-5 mx-auto'>\r\n            <h2>Formulario con validaciones de Formik</h2>\r\n            <Formik\r\n              initialValues={{ name: '', lastname: '', email: '', opcion: '', radio: '' }}\r\n              validate={validate}\r\n              onSubmit={values => console.log(values)}\r\n            >\r\n\r\n              <Form className='mb-5 border rounded rounded-lg mt-5'>\r\n                <label htmlFor='name' className='mt-5 fw-bold'>Nombre</label>\r\n                <TextInput name=\"name\" id='name' className='mt-1 w-50' />\r\n                <br />\r\n                <label htmlFor='lastname' className='mt-1 fw-bold'>Apellido</label>\r\n                <TextInput name=\"lastname\" id='lastname' className='mt-3 w-50' />\r\n                <br />\r\n                <label htmlFor='email' className='mt-1 fw-bold'>Correo</label>\r\n                <TextInput name=\"email\" id='email' className='mt-3 w-50' />\r\n                <label htmlFor='opcion' className='fw-bold mt-2'>Tipo de opcion</label>\r\n                <Select name=\"opcion\" id='opcion' className='mt-3 w-50'>\r\n                  <option value=\"\">Seleccione Opcion</option>\r\n                  <option value=\"felipe\">Felipe</option>\r\n                  <option value=\"chanchitofeliz\">Felipe Feliz</option>\r\n                  <option value=\"chanchitoinfeliz\">Felipe Infeliz</option>\r\n                </Select>\r\n                <Checkbox name=\"accept\" className='mt-3 mt-5'>\r\n                  Aceptar Terminos y condiciones\r\n                </Checkbox >\r\n                <Radio name=\"radio\" value=\"opcion1\" label=\"opcion1\" />\r\n                <Radio name=\"radio\" value=\"opcion2\" label=\"opcion2\" />\r\n                <Radio name=\"radio\" value=\"opcion3\" label=\"opcion3\" className='mb-4' />\r\n                <ErrorMessage name=\"radio\" />\r\n                <button type='submit' className='btn btn-success w-50 mb-4' >Enviar</button>\r\n              </Form>\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}